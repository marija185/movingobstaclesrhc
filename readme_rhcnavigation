Make catkin folder, e.g. rhcnavigation:
mkdir rhcnavigation
cd rhcnavigation
mkdir src
cd src
catkin_init_workspace
git clone https://github.com/amor-ros-pkg/rosaria.git
git clone https://github.com/marija185/movingobstaclesrhc.git
git clone https://github.com/marija185/mapsforsimulatorstage.git
git clone https://github.com/marija185/cspacevoroandrea.git
cd ..
catkin_make
set up the path:
cd devel
source setup.bash
(put it into ~/.bashrc)



necessary packages: navigation_stage (for simulating), amcl, map-server, libaria-dev, sicktoolbox_wrapper

                   
compiling:
catkin_make

run the simulation
roslaunch src/movingobstaclesrhc/launch/corridoramcltest.launch
roslaunch src/movingobstaclesrhc/launch/ushapeamcltest.launch
roslaunch src/movingobstaclesrhc/launch/smaprot18p5amcltestomnidrive.launch
roslaunch src/movingobstaclesrhc/launch/zavodtest.launch


run the robot

sudo chmod a+rw /dev/ttyUSB0 (controller)
sudo chmod a+rw /dev/ttyUSB1 (laser)
roslaunch src/movingobstaclesrhc/launch/pioneer3dx.launch (transform base_link laser)
roslaunch src/movingobstaclesrhc/launch/navigation_robot.launch (amcl localization and rhc navigation)


making a map:
$ roslaunch src/movingobstaclesrhc/launch/pioneer3dx.launch
$ roslaunch src/movingobstaclesrhc/launch/navigation_robot.launch (comment mapserver and amcl and uncomment hectorexp or gmapping)
$ sudo apt-get install ros-indigo-teleop-twist-keyboard
$ rosrun teleop_twist_keyboard teleop_twist_keyboard.py
$ rosrun map_server map_saver -f mapfile
opening the mapfile in gimp, autocrop and just replace the old krunolab.pgm file in mapsforsimulatorstage/bitmaps, otherwise open yaml and put origin to zero, uncommenting amcl localization in the navigation_robot.launch

if no amcl is used but only hector or gmapping then:
change in movingobstaclesrhc/include/Params.h #define LOADMAP 0 and recompile the package movingobstaclesrhc


